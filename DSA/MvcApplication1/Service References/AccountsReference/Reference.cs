//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcApplication1.AccountsReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Log", Namespace="http://schemas.datacontract.org/2004/07/Common", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Log : System.Data.Objects.DataClasses.EntityObject, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                this.AccountIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LogID {
            get {
                return this.LogIDField;
            }
            set {
                this.LogIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserID {
            get {
                return this.UserIDField;
            }
            set {
                this.UserIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FixedRate", Namespace="http://schemas.datacontract.org/2004/07/Common", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class FixedRate : System.Data.Objects.DataClasses.EntityObject, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> AccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FixedRate1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FixedRateIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> Accounts {
            get {
                return this.AccountsField;
            }
            set {
                this.AccountsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Duration {
            get {
                return this.DurationField;
            }
            set {
                this.DurationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> FixedRate1 {
            get {
                return this.FixedRate1Field;
            }
            set {
                this.FixedRate1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FixedRateID {
            get {
                return this.FixedRateIDField;
            }
            set {
                this.FixedRateIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/Common", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Account : System.Data.Objects.DataClasses.EntityObject, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountFriendlyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcApplication1.AccountsReference.AccountType AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AccountTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.Objects.DataClasses.EntityReference<MvcApplication1.AccountsReference.AccountType> AccountTypeReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcApplication1.AccountsReference.Currency CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.Objects.DataClasses.EntityReference<MvcApplication1.AccountsReference.Currency> CurrencyReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcApplication1.AccountsReference.FixedRate FixedRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FixedRateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.Objects.DataClasses.EntityReference<MvcApplication1.AccountsReference.FixedRate> FixedRateReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FromAccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> renewalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountFriendlyName {
            get {
                return this.AccountFriendlyNameField;
            }
            set {
                this.AccountFriendlyNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                this.AccountIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcApplication1.AccountsReference.AccountType AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                this.AccountTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AccountTypeID {
            get {
                return this.AccountTypeIDField;
            }
            set {
                this.AccountTypeIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.Objects.DataClasses.EntityReference<MvcApplication1.AccountsReference.AccountType> AccountTypeReference {
            get {
                return this.AccountTypeReferenceField;
            }
            set {
                this.AccountTypeReferenceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Balance {
            get {
                return this.BalanceField;
            }
            set {
                this.BalanceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                this.CreationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcApplication1.AccountsReference.Currency Currency {
            get {
                return this.CurrencyField;
            }
            set {
                this.CurrencyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CurrencyID {
            get {
                return this.CurrencyIDField;
            }
            set {
                this.CurrencyIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.Objects.DataClasses.EntityReference<MvcApplication1.AccountsReference.Currency> CurrencyReference {
            get {
                return this.CurrencyReferenceField;
            }
            set {
                this.CurrencyReferenceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcApplication1.AccountsReference.FixedRate FixedRate {
            get {
                return this.FixedRateField;
            }
            set {
                this.FixedRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FixedRateID {
            get {
                return this.FixedRateIDField;
            }
            set {
                this.FixedRateIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.Objects.DataClasses.EntityReference<MvcApplication1.AccountsReference.FixedRate> FixedRateReference {
            get {
                return this.FixedRateReferenceField;
            }
            set {
                this.FixedRateReferenceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FromAccountID {
            get {
                return this.FromAccountIDField;
            }
            set {
                this.FromAccountIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserID {
            get {
                return this.UserIDField;
            }
            set {
                this.UserIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> renewal {
            get {
                return this.renewalField;
            }
            set {
                this.renewalField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountType", Namespace="http://schemas.datacontract.org/2004/07/Common", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AccountType : System.Data.Objects.DataClasses.EntityObject, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountType1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> AccountsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountType1 {
            get {
                return this.AccountType1Field;
            }
            set {
                this.AccountType1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountTypeID {
            get {
                return this.AccountTypeIDField;
            }
            set {
                this.AccountTypeIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> Accounts {
            get {
                return this.AccountsField;
            }
            set {
                this.AccountsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Currency", Namespace="http://schemas.datacontract.org/2004/07/Common", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Currency : System.Data.Objects.DataClasses.EntityObject, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> AccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Currency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> Accounts {
            get {
                return this.AccountsField;
            }
            set {
                this.AccountsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency1 {
            get {
                return this.Currency1Field;
            }
            set {
                this.Currency1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyID {
            get {
                return this.CurrencyIDField;
            }
            set {
                this.CurrencyIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionType", Namespace="http://schemas.datacontract.org/2004/07/Common", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class TransactionType : System.Data.Objects.DataClasses.EntityObject, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionType1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<MvcApplication1.AccountsReference.Transaction> TransactionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionType1 {
            get {
                return this.TransactionType1Field;
            }
            set {
                this.TransactionType1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionTypeID {
            get {
                return this.TransactionTypeIDField;
            }
            set {
                this.TransactionTypeIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<MvcApplication1.AccountsReference.Transaction> Transactions {
            get {
                return this.TransactionsField;
            }
            set {
                this.TransactionsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transaction", Namespace="http://schemas.datacontract.org/2004/07/Common", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Transaction : System.Data.Objects.DataClasses.EntityObject, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FromAccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToAccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcApplication1.AccountsReference.TransactionType TransactionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TransactionTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.Objects.DataClasses.EntityReference<MvcApplication1.AccountsReference.TransactionType> TransactionTypeReferenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                this.AmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyID {
            get {
                return this.CurrencyIDField;
            }
            set {
                this.CurrencyIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FromAccountID {
            get {
                return this.FromAccountIDField;
            }
            set {
                this.FromAccountIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToAccountID {
            get {
                return this.ToAccountIDField;
            }
            set {
                this.ToAccountIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionID {
            get {
                return this.TransactionIDField;
            }
            set {
                this.TransactionIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcApplication1.AccountsReference.TransactionType TransactionType {
            get {
                return this.TransactionTypeField;
            }
            set {
                this.TransactionTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TransactionTypeID {
            get {
                return this.TransactionTypeIDField;
            }
            set {
                this.TransactionTypeIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.Objects.DataClasses.EntityReference<MvcApplication1.AccountsReference.TransactionType> TransactionTypeReference {
            get {
                return this.TransactionTypeReferenceField;
            }
            set {
                this.TransactionTypeReferenceField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountsReference.IAccountsService")]
    public interface IAccountsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/AddLog", ReplyAction="http://tempuri.org/IAccountsService/AddLogResponse")]
        void AddLog(MvcApplication1.AccountsReference.Log l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/getDuarationOfAccountById", ReplyAction="http://tempuri.org/IAccountsService/getDuarationOfAccountByIdResponse")]
        MvcApplication1.AccountsReference.FixedRate getDuarationOfAccountById(int fixedid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/DisableAccount", ReplyAction="http://tempuri.org/IAccountsService/DisableAccountResponse")]
        void DisableAccount(int accid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/UpdateAccount", ReplyAction="http://tempuri.org/IAccountsService/UpdateAccountResponse")]
        void UpdateAccount(int accid, int fixedrateid, System.DateTime renewal, decimal balance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetNotFixedAccounts", ReplyAction="http://tempuri.org/IAccountsService/GetNotFixedAccountsResponse")]
        System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> GetNotFixedAccounts(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetExpiredAccounts", ReplyAction="http://tempuri.org/IAccountsService/GetExpiredAccountsResponse")]
        System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> GetExpiredAccounts(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetTransactionByAccountIDAndDate", ReplyAction="http://tempuri.org/IAccountsService/GetTransactionByAccountIDAndDateResponse")]
        System.Collections.Generic.List<MvcApplication1.AccountsReference.Transaction> GetTransactionByAccountIDAndDate(int accid, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/AddTransaction", ReplyAction="http://tempuri.org/IAccountsService/AddTransactionResponse")]
        void AddTransaction(MvcApplication1.AccountsReference.Transaction T);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/getAccountByUsername", ReplyAction="http://tempuri.org/IAccountsService/getAccountByUsernameResponse")]
        System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> getAccountByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/getAccountsNotFixed", ReplyAction="http://tempuri.org/IAccountsService/getAccountsNotFixedResponse")]
        System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> getAccountsNotFixed();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/getAccountsByUsernameAndNotFixed", ReplyAction="http://tempuri.org/IAccountsService/getAccountsByUsernameAndNotFixedResponse")]
        System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> getAccountsByUsernameAndNotFixed(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/getCurrencyByName", ReplyAction="http://tempuri.org/IAccountsService/getCurrencyByNameResponse")]
        MvcApplication1.AccountsReference.Currency getCurrencyByName(string Currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/getAccountsByID", ReplyAction="http://tempuri.org/IAccountsService/getAccountsByIDResponse")]
        MvcApplication1.AccountsReference.Account getAccountsByID(int accID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetCurrencyByID", ReplyAction="http://tempuri.org/IAccountsService/GetCurrencyByIDResponse")]
        MvcApplication1.AccountsReference.Currency GetCurrencyByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetCurrency", ReplyAction="http://tempuri.org/IAccountsService/GetCurrencyResponse")]
        System.Collections.Generic.List<MvcApplication1.AccountsReference.Currency> GetCurrency();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/AddAccount", ReplyAction="http://tempuri.org/IAccountsService/AddAccountResponse")]
        void AddAccount(MvcApplication1.AccountsReference.Account a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/AmmendBalance", ReplyAction="http://tempuri.org/IAccountsService/AmmendBalanceResponse")]
        void AmmendBalance(int id, decimal value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetAccountType", ReplyAction="http://tempuri.org/IAccountsService/GetAccountTypeResponse")]
        System.Collections.Generic.List<MvcApplication1.AccountsReference.AccountType> GetAccountType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetFixedRates", ReplyAction="http://tempuri.org/IAccountsService/GetFixedRatesResponse")]
        System.Collections.Generic.List<MvcApplication1.AccountsReference.FixedRate> GetFixedRates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/getAccountByID", ReplyAction="http://tempuri.org/IAccountsService/getAccountByIDResponse")]
        MvcApplication1.AccountsReference.Account getAccountByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/getAccountsByUserID", ReplyAction="http://tempuri.org/IAccountsService/getAccountsByUserIDResponse")]
        System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> getAccountsByUserID(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetTransactionByAccountID", ReplyAction="http://tempuri.org/IAccountsService/GetTransactionByAccountIDResponse")]
        System.Collections.Generic.List<MvcApplication1.AccountsReference.Transaction> GetTransactionByAccountID(int accid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetLogs", ReplyAction="http://tempuri.org/IAccountsService/GetLogsResponse")]
        System.Collections.Generic.List<MvcApplication1.AccountsReference.Log> GetLogs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountsService/GetLogsByDate", ReplyAction="http://tempuri.org/IAccountsService/GetLogsByDateResponse")]
        System.Collections.Generic.List<MvcApplication1.AccountsReference.Log> GetLogsByDate(System.DateTime start, System.DateTime end);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountsServiceChannel : MvcApplication1.AccountsReference.IAccountsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountsServiceClient : System.ServiceModel.ClientBase<MvcApplication1.AccountsReference.IAccountsService>, MvcApplication1.AccountsReference.IAccountsService {
        
        public AccountsServiceClient() {
        }
        
        public AccountsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddLog(MvcApplication1.AccountsReference.Log l) {
            base.Channel.AddLog(l);
        }
        
        public MvcApplication1.AccountsReference.FixedRate getDuarationOfAccountById(int fixedid) {
            return base.Channel.getDuarationOfAccountById(fixedid);
        }
        
        public void DisableAccount(int accid) {
            base.Channel.DisableAccount(accid);
        }
        
        public void UpdateAccount(int accid, int fixedrateid, System.DateTime renewal, decimal balance) {
            base.Channel.UpdateAccount(accid, fixedrateid, renewal, balance);
        }
        
        public System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> GetNotFixedAccounts(string username) {
            return base.Channel.GetNotFixedAccounts(username);
        }
        
        public System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> GetExpiredAccounts(string username) {
            return base.Channel.GetExpiredAccounts(username);
        }
        
        public System.Collections.Generic.List<MvcApplication1.AccountsReference.Transaction> GetTransactionByAccountIDAndDate(int accid, System.DateTime start, System.DateTime end) {
            return base.Channel.GetTransactionByAccountIDAndDate(accid, start, end);
        }
        
        public void AddTransaction(MvcApplication1.AccountsReference.Transaction T) {
            base.Channel.AddTransaction(T);
        }
        
        public System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> getAccountByUsername(string username) {
            return base.Channel.getAccountByUsername(username);
        }
        
        public System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> getAccountsNotFixed() {
            return base.Channel.getAccountsNotFixed();
        }
        
        public System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> getAccountsByUsernameAndNotFixed(string username) {
            return base.Channel.getAccountsByUsernameAndNotFixed(username);
        }
        
        public MvcApplication1.AccountsReference.Currency getCurrencyByName(string Currency) {
            return base.Channel.getCurrencyByName(Currency);
        }
        
        public MvcApplication1.AccountsReference.Account getAccountsByID(int accID) {
            return base.Channel.getAccountsByID(accID);
        }
        
        public MvcApplication1.AccountsReference.Currency GetCurrencyByID(int id) {
            return base.Channel.GetCurrencyByID(id);
        }
        
        public System.Collections.Generic.List<MvcApplication1.AccountsReference.Currency> GetCurrency() {
            return base.Channel.GetCurrency();
        }
        
        public void AddAccount(MvcApplication1.AccountsReference.Account a) {
            base.Channel.AddAccount(a);
        }
        
        public void AmmendBalance(int id, decimal value) {
            base.Channel.AmmendBalance(id, value);
        }
        
        public System.Collections.Generic.List<MvcApplication1.AccountsReference.AccountType> GetAccountType() {
            return base.Channel.GetAccountType();
        }
        
        public System.Collections.Generic.List<MvcApplication1.AccountsReference.FixedRate> GetFixedRates() {
            return base.Channel.GetFixedRates();
        }
        
        public MvcApplication1.AccountsReference.Account getAccountByID(int id) {
            return base.Channel.getAccountByID(id);
        }
        
        public System.Collections.Generic.List<MvcApplication1.AccountsReference.Account> getAccountsByUserID(int userid) {
            return base.Channel.getAccountsByUserID(userid);
        }
        
        public System.Collections.Generic.List<MvcApplication1.AccountsReference.Transaction> GetTransactionByAccountID(int accid) {
            return base.Channel.GetTransactionByAccountID(accid);
        }
        
        public System.Collections.Generic.List<MvcApplication1.AccountsReference.Log> GetLogs() {
            return base.Channel.GetLogs();
        }
        
        public System.Collections.Generic.List<MvcApplication1.AccountsReference.Log> GetLogsByDate(System.DateTime start, System.DateTime end) {
            return base.Channel.GetLogsByDate(start, end);
        }
    }
}
